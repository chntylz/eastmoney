#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 2019-05-24, aaron
#time
import datetime as datetime
import time
import sys
import os

import psycopg2 #使用的是PostgreSQL数据库
from HData_eastmoney_day import *
import  datetime

from zig import *
from file_interface import *

# basic
import numpy as np
import pandas as pd

#talib
import talib

from funcat import *

#delete runtimer warning
import warnings
warnings.simplefilter(action = "ignore", category = RuntimeWarning)

#funcat
from funcat import *
from funcat.data.aaron_backend import AaronDataBackend
set_data_backend(AaronDataBackend())

from file_interface import *

hdata=HData_eastmoney_day("usr","usr")


draw_flag = False
is_cross3line = 0
is_d_volume = 0
is_peach = 0
is_zig = 0
is_quad = 0
is_boll = 0
is_macd = 0
is_ema = 0
is_2d3pct  = 0
is_up_days = 0
is_cup_tea = 0
is_duck_head = 0

nowdate=datetime.datetime.now().date()
start_time = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())

nowcode_new='000922'
nowcode = nowcode_new[2:]
nowcode = nowcode_new[:]

T(str(nowdate))

S(nowcode)

nowname = symbol(nowcode)
nowname = nowname[nowname.rfind('[') + 1:]
nowname = nowname[:nowname.rfind(']')]


detail_info = hdata.get_data_from_hdata(stock_code=nowcode_new, end_date=nowdate.strftime("%Y-%m-%d"), limit=700)

length=len(detail_info)
percent = detail_info.percent[length-1]

percent = detail_info.percent[length-1]
cond1 =  3 <= percent and percent <= 5

turnoverrate = detail_info.turnoverrate[length-1]
cond2 = turnoverrate > 5

circulation_mkt = detail_info.circulation_mkt[length-1]
cond3 = 200 * 1000 * 1000 < circulation_mkt and circulation_mkt < 20 * 1000 * 1000 * 1000 

cond4 = V>MA(V,5) and REF(V,1)<MA(V,5)

cond5 = C>MA(C,250)
cond6 = C/O > 1

is_d_volume = cond1 and cond2 and cond3 and cond4 and cond5 and cond6


